// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type CheckOperationReadStatusEnum string

const (
	CheckOperationReadStatusEnumSucceeded CheckOperationReadStatusEnum = "succeeded"
	CheckOperationReadStatusEnumFailed    CheckOperationReadStatusEnum = "failed"
)

func (e CheckOperationReadStatusEnum) ToPointer() *CheckOperationReadStatusEnum {
	return &e
}

func (e *CheckOperationReadStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "succeeded":
		fallthrough
	case "failed":
		*e = CheckOperationReadStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CheckOperationReadStatusEnum: %v", v)
	}
}

// CheckOperationRead - Successful operation
type CheckOperationRead struct {
	Message *string                      `json:"message,omitempty"`
	Status  CheckOperationReadStatusEnum `json:"status"`
}
