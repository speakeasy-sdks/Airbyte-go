// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type DestinationSyncModeEnum string

const (
	DestinationSyncModeEnumAppend      DestinationSyncModeEnum = "append"
	DestinationSyncModeEnumOverwrite   DestinationSyncModeEnum = "overwrite"
	DestinationSyncModeEnumAppendDedup DestinationSyncModeEnum = "append_dedup"
)

func (e DestinationSyncModeEnum) ToPointer() *DestinationSyncModeEnum {
	return &e
}

func (e *DestinationSyncModeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "append":
		fallthrough
	case "overwrite":
		fallthrough
	case "append_dedup":
		*e = DestinationSyncModeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DestinationSyncModeEnum: %v", v)
	}
}
