// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type SourceAuthSpecificationAuthType string

const (
	SourceAuthSpecificationAuthTypeOauth20 SourceAuthSpecificationAuthType = "oauth2.0"
)

func (e SourceAuthSpecificationAuthType) ToPointer() *SourceAuthSpecificationAuthType {
	return &e
}

func (e *SourceAuthSpecificationAuthType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "oauth2.0":
		*e = SourceAuthSpecificationAuthType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceAuthSpecificationAuthType: %v", v)
	}
}

type SourceAuthSpecification struct {
	AuthType *SourceAuthSpecificationAuthType `json:"auth_type,omitempty"`
	// An object containing any metadata needed to describe this connector's Oauth flow
	Oauth2Specification *OAuth2Specification `json:"oauth2Specification,omitempty"`
}
