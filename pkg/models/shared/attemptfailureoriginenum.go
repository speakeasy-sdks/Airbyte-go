// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// AttemptFailureOriginEnum - Indicates where the error originated. If not set, the origin of error is not well known.
type AttemptFailureOriginEnum string

const (
	AttemptFailureOriginEnumSource          AttemptFailureOriginEnum = "source"
	AttemptFailureOriginEnumDestination     AttemptFailureOriginEnum = "destination"
	AttemptFailureOriginEnumReplication     AttemptFailureOriginEnum = "replication"
	AttemptFailureOriginEnumPersistence     AttemptFailureOriginEnum = "persistence"
	AttemptFailureOriginEnumNormalization   AttemptFailureOriginEnum = "normalization"
	AttemptFailureOriginEnumDbt             AttemptFailureOriginEnum = "dbt"
	AttemptFailureOriginEnumAirbytePlatform AttemptFailureOriginEnum = "airbyte_platform"
	AttemptFailureOriginEnumUnknown         AttemptFailureOriginEnum = "unknown"
)

func (e AttemptFailureOriginEnum) ToPointer() *AttemptFailureOriginEnum {
	return &e
}

func (e *AttemptFailureOriginEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "source":
		fallthrough
	case "destination":
		fallthrough
	case "replication":
		fallthrough
	case "persistence":
		fallthrough
	case "normalization":
		fallthrough
	case "dbt":
		fallthrough
	case "airbyte_platform":
		fallthrough
	case "unknown":
		*e = AttemptFailureOriginEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AttemptFailureOriginEnum: %v", v)
	}
}
